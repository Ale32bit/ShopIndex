<div class="card m-1">
    <div class="card-body">
        <h5 class="card-title">Filter</h5>
        <div class="row">
            <div class="col-sm-12">
                <div class="input-group mb-3">
                    <span class="input-group-text"><i class="fa-solid fa-magnifying-glass" aria-hidden="true"></i></span>
                    <input type="text" class="form-control" placeholder="Search item..." aria-label="Search item" @bind-value="SearchText" @bind-value:event="oninput">
                </div>
            </div>

            <div class="col-sm-12 col-md-6 col-lg-4 col-xl-2">
                <div class="input-group mb-3">
                    <label class="input-group-text" for="sortSelect"><i class="fa-solid fa-sort"></i></label>
                    <select id="sortSelect" class="form-select" aria-label="Sort items by" @bind="Sort">
                        <option selected value="None" disabled>Sort items</option>
                        @foreach (var sortPair in FilterSortLocale)
                        {
                            <option value="@sortPair.Key">@sortPair.Value</option>
                        }
                    </select>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private string _searchText = "";

    [Parameter]
    public string SearchText
    {
        get => _searchText;
        set
        {
            if (value == _searchText)
                return;
            _searchText = value;
            if (OnSearchInput.HasDelegate)
                OnSearchInput.InvokeAsync(SearchText);
        }
    }

    private FilterSort _filterSort = FilterSort.None;

    [Parameter]
    public FilterSort Sort
    {
        get => _filterSort;
        set
        {
            if (value == _filterSort)
                return;
            _filterSort = value;
            if (OnSort.HasDelegate)
                OnSort.InvokeAsync(_filterSort);
        }
    }

    [Parameter]
    public EventCallback<string> OnSearchInput { get; set; }

    [Parameter]
    public EventCallback<FilterSort> OnSort { get; set; }

    public enum FilterSort
    {
        None,
        LowPrice,
        HighPrice,
        LowStock,
        HighStock,
        Alphabetical
    }

    private static Dictionary<FilterSort, string> FilterSortLocale = new()
        {
            [FilterSort.None] = "None",
            [FilterSort.LowPrice] = "Lowest price",
            [FilterSort.HighPrice] = "Highest price",
            [FilterSort.LowStock] = "Lowest stock",
            [FilterSort.HighStock] = "Highest stock",
            [FilterSort.Alphabetical] = "Alphabetical",
        };

}
